import { Command as $Command } from "@smithy/smithy-client";
import {
  MetadataBearer as __MetadataBearer,
  StreamingBlobPayloadInputTypes,
  StreamingBlobPayloadOutputTypes,
} from "@smithy/types";
import {
  LexRuntimeV2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LexRuntimeV2Client";
import {
  RecognizeUtteranceRequest,
  RecognizeUtteranceResponse,
} from "../models/models_0";
export { __MetadataBearer };
export { $Command };
export interface RecognizeUtteranceCommandInput
  extends Pick<
    RecognizeUtteranceRequest,
    Exclude<keyof RecognizeUtteranceRequest, "inputStream">
  > {
  inputStream?: StreamingBlobPayloadInputTypes;
}
export interface RecognizeUtteranceCommandOutput
  extends Pick<
      RecognizeUtteranceResponse,
      Exclude<keyof RecognizeUtteranceResponse, "audioStream">
    >,
    __MetadataBearer {
  audioStream?: StreamingBlobPayloadOutputTypes;
}
declare const RecognizeUtteranceCommand_base: {
  new (
    input: RecognizeUtteranceCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    RecognizeUtteranceCommandInput,
    RecognizeUtteranceCommandOutput,
    LexRuntimeV2ClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    __0_0: RecognizeUtteranceCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    RecognizeUtteranceCommandInput,
    RecognizeUtteranceCommandOutput,
    LexRuntimeV2ClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class RecognizeUtteranceCommand extends RecognizeUtteranceCommand_base {
  protected static __types: {
    api: {
      input: RecognizeUtteranceRequest;
      output: RecognizeUtteranceResponse;
    };
    sdk: {
      input: RecognizeUtteranceCommandInput;
      output: RecognizeUtteranceCommandOutput;
    };
  };
}
