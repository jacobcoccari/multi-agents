import { ConversationMessage } from "../types";
import { BedrockRuntimeClient } from "@aws-sdk/client-bedrock-runtime";
import { Classifier, ClassifierResult } from "./classifier";
export interface BedrockClassifierOptions {
    modelId?: string;
    region?: string;
    inferenceConfig?: {
        maxTokens?: number;
        temperature?: number;
        topP?: number;
        stopSequences?: string[];
    };
}
/**
 * IntentClassifier class extends BedrockAgent to provide specialized functionality
 * for classifying user intents, selecting appropriate agents, and generating
 * structured response.
 */
export declare class BedrockClassifier extends Classifier {
    protected inferenceConfig: {
        maxTokens?: number;
        temperature?: number;
        topP?: number;
        stopSequences?: string[];
    };
    protected client: BedrockRuntimeClient;
    protected region: string;
    protected tools: {
        toolSpec: {
            name: string;
            description: string;
            inputSchema: {
                json: {
                    type: string;
                    properties: {
                        userinput: {
                            type: string;
                            description: string;
                        };
                        selected_agent: {
                            type: string;
                            description: string;
                        };
                        confidence: {
                            type: string;
                            description: string;
                        };
                    };
                    required: string[];
                };
            };
        };
    }[];
    /**
     * Constructs a new IntentClassifier instance.
     * @param options - Configuration options for the agent, inherited from AgentOptions.
     */
    constructor(options?: Partial<BedrockClassifierOptions>);
    /**
     * Method to process a request.
     * This method must be implemented by all concrete agent classes.
     *
     * @param inputText - The user input as a string.
     * @param chatHistory - An array of Message objects representing the conversation history.
     * @param additionalParams - Optional additional parameters as key-value pairs.
     * @returns A Promise that resolves to a Message object containing the agent's response.
     */
    processRequest(inputText: string, chatHistory: ConversationMessage[]): Promise<ClassifierResult>;
}
