import { BedrockRuntimeClient, Tool } from "@aws-sdk/client-bedrock-runtime";
import { Agent, AgentOptions } from "./agent";
import { ConversationMessage, TemplateVariables } from "../types";
import { Retriever } from "../retrievers/retriever";
export interface BedrockLLMAgentOptions extends AgentOptions {
    streaming?: boolean;
    inferenceConfig?: {
        maxTokens?: number;
        temperature?: number;
        topP?: number;
        stopSequences?: string[];
    };
    guardrailConfig?: {
        guardrailIdentifier: string;
        guardrailVersion: string;
    };
    retriever?: Retriever;
    toolConfig?: {
        tool: Tool[];
        useToolHandler: (response: any, conversation: ConversationMessage[]) => any;
        toolMaxRecursions?: number;
    };
    customSystemPrompt?: {
        template: string;
        variables?: TemplateVariables;
    };
    client?: BedrockRuntimeClient;
}
/**
 * BedrockAgent class represents an agent that uses Amazon Bedrock for natural language processing.
 * It extends the base Agent class and implements the processRequest method using Bedrock's API.
 */
export declare class BedrockLLMAgent extends Agent {
    /** AWS Bedrock Runtime Client for making API calls */
    protected client: BedrockRuntimeClient;
    protected customSystemPrompt?: string;
    protected streaming: boolean;
    protected inferenceConfig: {
        maxTokens?: number;
        temperature?: number;
        topP?: number;
        stopSequences?: string[];
    };
    /**
     * The ID of the model used by this agent.
     */
    protected modelId?: string;
    protected guardrailConfig?: {
        guardrailIdentifier: string;
        guardrailVersion: string;
    };
    protected retriever?: Retriever;
    private toolConfig?;
    private promptTemplate;
    private systemPrompt;
    private customVariables;
    private defaultMaxRecursions;
    /**
     * Constructs a new BedrockAgent instance.
     * @param options - Configuration options for the agent, inherited from AgentOptions.
     */
    constructor(options: BedrockLLMAgentOptions);
    /**
     * Abstract method to process a request.
     * This method must be implemented by all concrete agent classes.
     *
     * @param inputText - The user input as a string.
     * @param chatHistory - An array of Message objects representing the conversation history.
     * @param additionalParams - Optional additional parameters as key-value pairs.
     * @returns A Promise that resolves to a Message object containing the agent's response.
     */
    processRequest(inputText: string, userId: string, sessionId: string, chatHistory: ConversationMessage[], additionalParams?: Record<string, string>): Promise<ConversationMessage | AsyncIterable<any>>;
    protected handleSingleResponse(input: any): Promise<ConversationMessage>;
    private handleStreamingResponse;
    setSystemPrompt(template?: string, variables?: TemplateVariables): void;
    private updateSystemPrompt;
    private replaceplaceholders;
}
