import { Agent, AgentOptions } from "./agent";
import { ConversationMessage } from "../types";
/**
 * Options for configuring an Amazon Lex Bot agent.
 * Extends base AgentOptions with specific parameters required for Amazon Lex.
 */
export interface LexBotAgentOptions extends AgentOptions {
    botId: string;
    botAliasId: string;
    localeId: string;
}
/**
 * LexBotAgent class for interacting with Amazon Lex Bot.
 * Extends the base Agent class.
 */
export declare class LexBotAgent extends Agent {
    private readonly lexClient;
    private readonly botId;
    private readonly botAliasId;
    private readonly localeId;
    /**
     * Constructor for LexBotAgent.
     * @param options - Configuration options for the Lex Bot agent
     */
    constructor(options: LexBotAgentOptions);
    /**
     * Process a request to the Lex Bot.
     * @param inputText - The user's input text
     * @param userId - The ID of the user
     * @param sessionId - The ID of the current session
     * @param chatHistory - The history of the conversation
     * @param additionalParams - Any additional parameters to include
     * @returns A Promise resolving to a ConversationMessage containing the bot's response
     */
    processRequest(inputText: string, userId: string, sessionId: string, chatHistory: ConversationMessage[], additionalParams?: Record<string, string>): Promise<ConversationMessage>;
}
