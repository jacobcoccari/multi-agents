import { Agent, AgentOptions } from "./agent";
import { ConversationMessage } from "../types";
import { LanguageCode } from "@aws-sdk/client-comprehend";
type CheckFunction = (input: string) => Promise<string | null>;
export interface ComprehendFilterAgentOptions extends AgentOptions {
    enableSentimentCheck?: boolean;
    enablePiiCheck?: boolean;
    enableToxicityCheck?: boolean;
    sentimentThreshold?: number;
    toxicityThreshold?: number;
    allowPii?: boolean;
    languageCode?: LanguageCode;
}
/**
 * ComprehendContentFilterAgent class
 *
 * This agent uses Amazon Comprehend to analyze and filter content based on
 * sentiment, PII, and toxicity. It can be configured to enable/disable specific
 * checks and allows for the addition of custom checks.
 */
export declare class ComprehendFilterAgent extends Agent {
    private comprehendClient;
    private customChecks;
    private enableSentimentCheck;
    private enablePiiCheck;
    private enableToxicityCheck;
    private sentimentThreshold;
    private toxicityThreshold;
    private allowPii;
    private languageCode;
    /**
     * Constructor for ComprehendContentFilterAgent
     * @param options - Configuration options for the agent
     */
    constructor(options: ComprehendFilterAgentOptions);
    /**
     * Processes a user request by sending it to the Amazon Bedrock agent for processing.
     * @param inputText - The user input as a string.
     * @param userId - The ID of the user sending the request.
     * @param sessionId - The ID of the session associated with the conversation.
     * @param chatHistory - An array of Message objects representing the conversation history.
     * @param additionalParams - Optional additional parameters as key-value pairs.
     * @returns A Promise that resolves to a Message object containing the agent's response.
     */
    processRequest(inputText: string, userId: string, sessionId: string, chatHistory: ConversationMessage[], additionalParams?: Record<string, string>): Promise<ConversationMessage>;
    /**
     * Add a custom check function to the agent
     * @param check - A function that takes a string input and returns a Promise<string | null>
     */
    addCustomCheck(check: CheckFunction): void;
    /**
     * Check sentiment of the input text
     * @param result - Result from Comprehend's sentiment detection
     * @returns A string describing the issue if sentiment is negative, null otherwise
     */
    private checkSentiment;
    /**
     * Check for PII in the input text
     * @param result - Result from Comprehend's PII detection
     * @returns A string describing the issue if PII is detected, null otherwise
     */
    private checkPii;
    /**
     * Check for toxic content in the input text
     * @param result - Result from Comprehend's toxic content detection
     * @returns A string describing the issue if toxic content is detected, null otherwise
     */
    private checkToxicity;
    /**
     * Detect sentiment using Amazon Comprehend
     * @param text - Input text to analyze
     */
    private detectSentiment;
    /**
     * Detect PII entities using Amazon Comprehend
     * @param text - Input text to analyze
     */
    private detectPiiEntities;
    /**
     * Detect toxic content using Amazon Comprehend
     * @param text - Input text to analyze
     */
    private detectToxicContent;
    /**
     * Extract toxic labels from the Comprehend response
     * @param toxicityResult - Result from Comprehend's toxic content detection
     * @returns Array of toxic label names that exceed the threshold
     */
    private getToxicLabels;
    /**
     * Set the language code for Comprehend operations
     * @param languageCode - The ISO 639-1 language code
     */
    setLanguageCode(languageCode: LanguageCode): void;
    /**
     * Validate the provided language code
     * @param languageCode - The language code to validate
     * @returns The validated LanguageCode or undefined if invalid
     */
    private validateLanguageCode;
}
export {};
