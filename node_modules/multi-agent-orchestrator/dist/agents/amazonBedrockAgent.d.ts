import { BedrockAgentRuntimeClient } from "@aws-sdk/client-bedrock-agent-runtime";
import { ConversationMessage } from "../types";
import { Agent, AgentOptions } from "./agent";
/**
 * Options for configuring an Amazon Bedrock agent.
 * Extends base AgentOptions with specific parameters required for Amazon Bedrock.
 */
export interface AmazonBedrockAgentOptions extends AgentOptions {
    agentId: string;
    agentAliasId: string;
    client?: BedrockAgentRuntimeClient;
}
/**
 * Represents an Amazon Bedrock agent that interacts with a runtime client.
 * Extends base Agent class and implements specific methods for Amazon Bedrock.
 */
export declare class AmazonBedrockAgent extends Agent {
    private agentId;
    private agentAliasId;
    private client;
    /**
     * Constructs an instance of AmazonBedrockAgent with the specified options.
     * Initializes the agent ID, agent alias ID, and creates a new Bedrock agent runtime client.
     * @param options - Options to configure the Amazon Bedrock agent.
     */
    constructor(options: AmazonBedrockAgentOptions);
    /**
     * Processes a user request by sending it to the Amazon Bedrock agent for processing.
     * @param inputText - The user input as a string.
     * @param userId - The ID of the user sending the request.
     * @param sessionId - The ID of the session associated with the conversation.
     * @param chatHistory - An array of Message objects representing the conversation history.
     * @param additionalParams - Optional additional parameters as key-value pairs.
     * @returns A Promise that resolves to a Message object containing the agent's response.
     */
    processRequest(inputText: string, userId: string, sessionId: string, chatHistory: ConversationMessage[], additionalParams?: Record<string, string>): Promise<ConversationMessage>;
}
