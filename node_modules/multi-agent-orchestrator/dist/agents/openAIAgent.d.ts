import { Agent, AgentOptions } from './agent';
import { ConversationMessage } from '../types';
export interface OpenAIAgentOptions extends AgentOptions {
    apiKey: string;
    model?: string;
    streaming?: boolean;
    inferenceConfig?: {
        maxTokens?: number;
        temperature?: number;
        topP?: number;
        stopSequences?: string[];
    };
}
export declare class OpenAIAgent extends Agent {
    private openai;
    private model;
    private streaming;
    private inferenceConfig;
    constructor(options: OpenAIAgentOptions);
    processRequest(inputText: string, userId: string, sessionId: string, chatHistory: ConversationMessage[], additionalParams?: Record<string, string>): Promise<ConversationMessage | AsyncIterable<any>>;
    private handleSingleResponse;
    private handleStreamingResponse;
}
