import { Retriever } from "./retriever";
import { BedrockAgentRuntimeClient, RetrieveAndGenerateConfiguration, KnowledgeBaseRetrievalConfiguration } from "@aws-sdk/client-bedrock-agent-runtime";
/**
 * Interface defining the options for AmazonKnowledgeBasesRetriever
 */
export interface AmazonKnowledgeBasesRetrieverOptions {
    knowledgeBaseId?: string;
    retrievalConfiguration?: KnowledgeBaseRetrievalConfiguration;
    retrieveAndGenerateConfiguration?: RetrieveAndGenerateConfiguration;
}
/**
 * AmazonKnowledgeBasesRetriever class for interacting with Amazon Knowledge Bases
 * Extends the base Retriever class
 */
export declare class AmazonKnowledgeBasesRetriever extends Retriever {
    private client;
    protected options: AmazonKnowledgeBasesRetrieverOptions;
    /**
     * Constructor for AmazonKnowledgeBasesRetriever
     * @param client - AWS Bedrock Agent Runtime client
     * @param options - Configuration options for the retriever
     */
    constructor(client: BedrockAgentRuntimeClient, options: AmazonKnowledgeBasesRetrieverOptions);
    /**
     * Private method to send a command to the AWS Bedrock Agent Runtime
     * @param command - The command to send
     * @returns A promise that resolves to the response from the command
     * @throws Error if the command fails
     */
    private send_command;
    /**
     * Retrieve and generate based on input text
     * @param text - The input text
     * @param retrieveAndGenerateConfiguration - Optional configuration for retrieve and generate
     * @returns A promise that resolves to the result of the retrieve and generate operation
     */
    retrieveAndGenerate(text: string, retrieveAndGenerateConfiguration?: RetrieveAndGenerateConfiguration): Promise<any>;
    /**
     * Retrieve information based on input text
     * @param text - The input text
     * @param knowledgeBaseId - Optional knowledge base ID (overrides the one in options)
     * @param retrievalConfiguration - Optional retrieval configuration (overrides the one in options)
     * @returns A promise that resolves to the retrieval results
     */
    retrieve(text: string, knowledgeBaseId?: string, retrievalConfiguration?: KnowledgeBaseRetrievalConfiguration): Promise<any>;
    /**
     * Retrieve and combine results based on input text
     * @param text - The input text
     * @param knowledgeBaseId - Optional knowledge base ID (overrides the one in options)
     * @param retrievalConfiguration - Optional retrieval configuration (overrides the one in options)
     * @returns A promise that resolves to the combined retrieval results
     */
    retrieveAndCombineResults(text: string, knowledgeBaseId?: string, retrievalConfiguration?: KnowledgeBaseRetrievalConfiguration): Promise<string>;
    /**
     * Private method to combine retrieval results
     * @param retrievalResults - Array of KnowledgeBaseRetrievalResult
     * @returns A string combining all the text content from the results
     */
    private combineRetrievalResults;
}
